{"version":3,"sources":["components/MenuItem.js","components/MenuList.js","components/Order.js","components/App.js","reportWebVitals.js","index.js"],"names":["MenuItem","item","this","props","className","name","description","price","onClick","addItemToOrder","Component","MenuList","categories","items","map","category","menu","Set","index","filter","Order","state","orders","customer","handleInput","bind","handleSubmit","e","setState","target","value","preventDefault","submitOrder","orderItems","order","removeItemFromOrder","subtotal","reduce","acc","i","onSubmit","type","onChange","React","buttons","App","handleClick","filterItems","fetch","then","response","json","data","push","itemName","findIndex","splice","options","method","headers","Cookies","get","body","JSON","stringify","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f913f6e4.chunk.js","sourcesContent":["import { Component } from 'react';\n\n\nclass MenuItem extends Component {\n\n  render() {\n    const item = this.props.item;\n\n    return(\n      <li key={item.name} className=\"order\">\n        <h2 className=\"itemname\">{item.name}</h2>\n        <p className=\"itemdesc\">{item.description}</p>\n        <p className=\"itemprice\">${item.price}</p>\n        <button onClick={() => this.props.addItemToOrder(item)}>Add to order</button>\n      </li>\n    )\n  }\n}\n\n\n\n\nexport default MenuItem\n","import { Component } from 'react'\nimport MenuItem from './MenuItem'\n\nclass MenuList extends Component {\n\n  render(){\n  const categories = this.props.items.map(item => item.category);\n  const uniqueCategories = [...new Set(categories)];\n\n  const menu = uniqueCategories.map((category, index) => {\n\n    const items = this.props.items\n      .filter(item => item.category === category)\n      .map((item, index) => (\n        <MenuItem key={item.name} item={item} addItemToOrder={this.props.addItemToOrder}/>\n      ));\n\n      return (\n        <>\n          <h2 className=\"category\">{category}</h2>\n          <ul>{items}</ul>\n        </>\n      );\n  });\n\n  return (\n    <>\n      {menu}\n    </>\n  )\n}\n}\n\nexport default MenuList\n","import React from 'react';\n\nimport './App.css'\n\nclass Order extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      customer: '',\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.submitOrder(this.state.items);\n    this.setState({items: ''});\n  }\n\n  render() {\n    const orderItems = this.props.order.map((item, index) => (\n      <li>\n        <p>{item.name}</p>\n        <p>${item.price}</p>\n        <button onClick={() => this.props.removeItemFromOrder(item.name)}>Remove</button>\n      </li>\n    ));\n\n\n    const subtotal = this.props.order.reduce((acc, i) => acc + i.price , 0);\n\n    return(\n      <>\n        <h2>Order</h2>\n        <ul>{orderItems}</ul>\n        <p>Subtotal: ${subtotal}</p>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"customer\" value={this.state.customer} onChange={this.handleInput}/>\n          <button type=\"submit\">Submit Order</button>\n        </form>\n      </>\n    )\n  }\n}\n\n\nexport default Order;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\nimport MenuList from './MenuList'\nimport Order from './Order';\n\nconst buttons = [\n  { name: \"All\", value: \"All\"},\n  { name: \"Pizza\", value: \"Pizza\" },\n  { name: \"Salad\", value: \"Salad\" },\n  { name: \"Sides\", value: \"Sides\" },\n  { name: \"Drinks\", value: \"Drinks\"}\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      order: [],\n      filterItems: [],\n    };\n\n    this.addItemToOrder = this.addItemToOrder.bind(this);\n    this.removeItemFromOrder = this.removeItemFromOrder.bind(this);\n    this.submitOrder = this.submitOrder.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/menu/')\n      .then(response => response.json())\n      .then(data => this.setState({ items: data }));\n  }\n\n  addItemToOrder(item){\n    const order = [...this.state.order];\n    order.push(item);\n    this.setState({order});\n  }\n\n  removeItemFromOrder(itemName) {\n    const order = [...this.state.order];\n    const index = order.findIndex(item => item.name === itemName);\n    order.splice(index, 1);\n    this.setState({order});\n  }\n\n  submitOrder(customer) {\n\n    const subtotal = this.state.order.reduce((acc, i) => acc + i.price , 0);\n\n    const order = {\n      customer: customer,\n      items: this.state.order,\n      subtotal,\n    };\n\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(order),\n    }\n\n    fetch('/api/v1/order/', options)\n      .then(response => response.json())\n      .then(data => console.log(data));\n  }\n\n  handleClick = name => {\n    let filterItems = [];\n    if (name === \"All\") {\n      filterItems = this.state.items;\n    } else {\n      filterItems = this.state.items.filter(\n        item => item.category === name\n      );\n    }\n\n    this.setState({ filterItems });\n  };\n\n  render() {\n\n    return(\n      <>\n        {buttons.map(({ name, value }) => (\n          <button key={name} value={value} onClick={this.handleClick.bind(this, name)}>\n          {name}\n        </button>\n        ))}\n        <h1>Vic's Pizza</h1>\n        <MenuList items={this.state.items} addItemToOrder={this.addItemToOrder}/>\n        <Order order={this.state.order} removeItemFromOrder={this.removeItemFromOrder} submitOrder={this.submitOrder} className=\"order\"/>\n      </>\n    )\n  }\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}